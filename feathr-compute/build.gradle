apply plugin: 'java'
apply plugin: 'maven-publish'
apply plugin: 'signing'

dependencies {
  implementation project(":feathr-config")
  implementation project(":feathr-data-models")
  implementation project(path: ':feathr-data-models', configuration: 'dataTemplate')
  implementation spec.product.mvel
  implementation spec.product.jsqlparser

  testImplementation spec.product.testing
  testImplementation spec.product.mockito
  testImplementation spec.product.equalsverifier
  testImplementation spec.product.mockito_inline

  implementation spec.product.jackson.dataformat_yaml
  implementation spec.product.jackson.jackson_databind
  implementation spec.product.guava
}

javadoc {
  options.noQualifiers 'all'
}

test {
  maxParallelForks = 1
  forkEvery = 1
  // need to keep a lower heap size (TOOLS-296596)
  minHeapSize = "512m"
  useTestNG()
}

java {
  withSourcesJar()
}

publishing {
  publications {
    mavenJava(MavenPublication) {
      artifactId = 'feathr-compute'
      from components.java
      versionMapping {
        usage('java-api') {
          fromResolutionOf('runtimeClasspath')
        }
        usage('java-runtime') {
          fromResolutionResult()
        }
      }
      pom {
        name = 'Feathr'
        description = 'An Enterprise-Grade, High Performance Feature Store'
        url = 'https://github.com/linkedin/feathr'
        licenses {
          license {
            name = 'APL2'
            url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
          }
        }
        developers {
          developer {
            id = 'feathr_dev'
            name = 'Feathr Dev'
            email = 'feathrai@gmail.com'
          }
        }
        scm {
          connection = 'scm:git@github.com:linkedin/feathr.git'
          url = 'https://github.com/linkedin/feathr'
        }
      }
    }
  }
  repositories {
    maven {
      url "https://oss.sonatype.org/service/local/staging/deploy/maven2"
      credentials {
        username = "sonatypeUsername"
        password = "sonatypePassword"
      }
    }
  }
}

signing {
  sign publishing.publications.mavenJava
}
